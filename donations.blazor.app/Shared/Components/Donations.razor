@using donations.blazor.app.Data.Services.Contracts
@using Microsoft.AspNetCore.WebUtilities
@inject IDialogService DialogService
@inject IPayfastService payfastService
@inject NavigationManager UriHelper
@inject IJSRuntime JS


<!--<form action="https://sandbox.payfast.co.za​/eng/process" method="post">
  <input type="hidden" name="merchant_id" value="10000100">
  <input type="hidden" name="merchant_key" value="46f0cd694581a">
  <input type="hidden" name="amount" value="@model.Amount">
  <input type="hidden" name="item_name" value="Test Product">-->
@*<input type="submit">*@
<!--</form>-->

@inject NavigationManager NavManager


<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
  <DataAnnotationsValidator />
  <MudGrid Justify="Justify.Center" style="max-width:600px; border:1px solid #000000">
    <MudItem xs="12">
      <MudText class="mud-theme-primary py-4 px-6 mx-4 rounded-t-xl" Align="Align.Center">Donations</MudText>
    </MudItem>

    <MudItem xs="2">
    </MudItem>
    <MudItem xs="4">
      <MudItem>
        <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.ControlPoint" Size="Size.Large" IconSize="Size.Small" Label="R 100" Class="ma-2"
                @onclick="() => AddDonation(100)" />
      </MudItem>
    </MudItem>
    <MudItem xs="4">
      <MudItem>
        <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.ControlPoint" Size="Size.Large" IconSize="Size.Small" Label="R 500" Class="ma-2"
                @onclick="() => AddDonation(500)" />
      </MudItem>
    </MudItem>
    <MudItem xs="2">
    </MudItem>

    <MudItem xs="2">
    </MudItem>
    <MudItem xs="4">
      <MudItem>
        <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.ControlPoint" Size="Size.Large" IconSize="Size.Small" Label="R 250" Class="ma-2"
                @onclick="() => AddDonation(250)" />
      </MudItem>
    </MudItem>
    <MudItem xs="4">
      <MudItem>
        <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.ControlPoint" Size="Size.Large" IconSize="Size.Small" Label="R1000" Class="ma-2"
                @onclick="() => AddDonation(1000)" />
      </MudItem>
    </MudItem>
    <MudItem xs="2">
    </MudItem>

    <MudItem xs="2">
    </MudItem>
    <MudItem xs="8">
      <MudTextField Label="Amount" HelperText="Custom amount"
                    @bind-Value="model.Amount" For="@(() => model.Amount)"
                    Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentText="R" />
      <br />
    </MudItem>
    <MudItem xs="2">
    </MudItem>

    <MudItem xs="5">
    </MudItem>
    <MudItem xs="3">
      <MudCardActions>
        @if (model.Amount > 0)
        {
          <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Secondary" Class="d-flex align-center justify-center">DONATE</MudButton>
        }
        else
        {
          <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Disabled="true" Color="Color.Secondary" Class="d-flex align-center justify-center">DONATE</MudButton>
        }

      </MudCardActions>

    </MudItem>
    <MudItem xs="4">
    </MudItem>

  </MudGrid>
</EditForm>

@code {
  bool paymentSubmitted = false;

  Donation model = new Donation();

  public class Donation
  {
    public decimal Amount { get; set; }
    public string Message { get; set; }
  }

  private void AddDonation(int amount)
  {
    model.Amount = amount;
  }

  private void OnValidSubmit(EditContext context)
  {
    var amount = model.Amount;
    var message = model.Message;

    //HttpResponseMessage result = new HttpResponseMessage();
    if (amount > 0)
    {
      //result = payfastService.SubmitPayment(amount).Result;
      var merchantDetails = payfastService.GetPaymentDetails().Result;

      var query = new Dictionary<string, string>
      {
        { "merchant_id", merchantDetails.merchant_id.ToString() },
        { "merchant_key", merchantDetails.merchant_key },
        { "amount", amount.ToString() },
        { "item_name", merchantDetails.item_name },
        { "return_url", merchantDetails.return_url },
        { "cancel_url", merchantDetails.cancel_url },
        { "notify_url", merchantDetails.notify_url }
      };

      UriHelper.NavigateTo(QueryHelpers.AddQueryString("https://sandbox.payfast.co.za​/eng/process", query), forceLoad: true);

      //UriHelper.NavigateTo(QueryHelpers.AddQueryString("https://sandbox.payfast.co.za​/eng/process", query));

      //var uri = UriHelper.ToAbsoluteUri(UriHelper.Uri);

      //if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("Id", out var param))
      //{
      //  Id = param.First();
      //}
    }

    //if (paymentSubmitted)
    //{
    //  //var parameters = new DialogParameters();
    //  //parameters.Add("ContentText", result.Content); //"Thank you for your generous donation. It is greatly appreciated.");
    //  //parameters.Add("ButtonText", "OK");
    //  //parameters.Add("Color", Color.Success);
    //  //DialogService.Show<MessageDialog>("Donation Payment Successful", parameters);

    //  model.Amount = 0;
    //}

    StateHasChanged();

  }
}
